此框架的目的是 我们需要定性的对ai解释技能本身的效果，从而帮助ai做出更好的判断。
这个定性本身需要一个很好的框架来支撑。 
框架应用层： 1 选将ai 2 身份倾向性判断和盲狙ai  3 进行更准确的形势分析（特别是对于内）


-- *********节点和关系*********
体系的两个重要元素 【节点】 【节点关系】
节点和节点之间的联系为【节点关系】，节点之间的关系可以为复数个。
最重要的一个节点关系是父子关系（继承关系）。

节点关系是有方向性。
比如节点 造成伤害时， 受到伤害时，
可以定义为时序关系。 并且通过方向，来代表时序上的优先顺序。

-- *************技能的拆解*********
目前 对一个技能进行解释时，可以参考技能代码的写法：划分出几类节点的集合：
其定义如下：
1 effect  对于技能的效果的说明，最重要的部分。effect就由框架中具体的节点来加以解释。
2 trigger 依附于effect，作为一些补充属性。一般理解为相当于源代码中的event等属性的节点的集合体。
3 target 阐释作用目标，或一些关联目标，和effect的节点对应。
4 cost  对于目前的应用需求来说，貌似没啥必要。。。。不过更高级的ai，比如衡量发动技能值不值得时，就有作用了。

trigger和target可以认为是达成effect的必要条件。若仅仅是effect的节点产生了关系A，
而trigger和target的相应节点没有达成一致，那么对于两个技能而言，关系A并不存在。

最好effect和trigger中的节点集合是没有交集的。
元素间的序号要对应


-- *********实际举例*********
举例：  【】内为节点   《》内为关系
神兔子 高傲：
effect： 元素1：【不能获得牌】。 
target： 元素1：（对应effect的元素1）：【技能人】
trigger： 元素1：（对应effect的元素1） 元素1中的一个元素： 【回合外】 

莲子 识途：
effect 元素1：【补牌】。   
target： 元素1：（对应effect的元素1）：【任意人物】
trigger： 元素1：（对应effect的元素1） 元素1中的一个元素： 【回合内】 

恋恋  埋火：
effect 元素1：【补牌】。   元素2：【补拍】                 元素1对应：补别人 元素2对应补自己的效果
target： 元素1：（对应effect的元素1）：【其他人物】
trigger： 元素1：（对应effect的元素1） 元素1中的一个元素： 【回合外】 


step1 然后各个effect逐一对应check节点的关系：
【补拍】之于【不能获得牌】而言为：  《负收益》   （另外还有无收益 正收益的关系）
另外要说明的是节点的关系是由方向性的，换个方向就不一定一致。 比如 【改判】之于【产生判定】而言是 《正收益》《负收益》都有。
【产生判定】之于【改判】只有《正收益》

因此 可以看到 对于神兔子而言，莲子和恋恋的技能都是被判断为《负收益》   

如果check、到一些有必要分析的关系，比如这里的《负收益》   那么进入step2
step2 对照target和trigger
target中 【技能人】和【任意人物】的关系是《父子关系》  【技能人】和【其他人物】的关系是《排己性包含》（也就是check是否两技能是同一人的，是则为不包含；反之包含）
于是这里都可以判定为包含，因此target的一致性对照通过了。

trigegr也是同理。 于是trigger的一致性问题上，莲子没通过， 恋恋通过了。


那么这个时候才正式认为： 恋恋的埋火之于神兔子的高傲是《负收益》关系。
那么 ai可以认为神兔子局里，恋恋的出现是偏反的倾向。


存储形式？
sgs.skillIntroduction的一个表
sgs.skillIntroduction.skillname  为具体技能
sgs.skillIntroduction.skillname.effect

然后另外需要 函数和表 来分析节点关系。



